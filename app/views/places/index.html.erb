
<%= @coordinates.first %>, <%= @coordinates.last %>

<%= react_component 'Places', props: { coordinates: @coordinates, geolocate: true } %>

<%= form_with(model: @place) do |form| %>
  <%= form.hidden_field :latitude %>
  <%= form.hidden_field :longitude %>
  <div>
    <%= form.label :name %>
    <%= form.text_field :name, required: true, class: "text_input" %>
  </div>
  <div>
    <%= form.label :street %>
    <%= form.text_field :street, class: "text_input" %>
  </div>
  <div>
    <%= form.label :city %>
    <%= form.text_field :city, class: "text_input" %>
  </div>
  <div>
    <%= form.label :state %>
    <%= form.text_field :state, class: "text_input" %>
  </div>
  <div>
    <%= form.label :country %>
    <%= form.text_field :country, class: "text_input" %>
  </div>
  <div class="field">
    <%= form.label :image %>
    <%= form.file_field :image %>
  </div>
  <div>
  <div>
    <%= form.submit %>
  </div>
<% end %>

<script type="text/javascript">
  if ("geolocation" in navigator) {
    navigator.geolocation.getCurrentPosition(
      // success callback
      (position) => {
        document.getElementById('place_latitude').value = position.coords.latitude;
        document.getElementById('place_longitude').value = position.coords.longitude;
      },
      // failure callback
      () => { console.log('could not get location') },
      // options
      {
        enableHighAccuracy: true,
        maximumAge        : 30000,
        timeout           : 27000
      }
    );
  }
</script>
